#!/usr/bin/env node

/**
 * Test simple del orquestador
 */

console.log('üîç INICIANDO TEST SIMPLE DEL ORQUESTADOR\n');

async function simpleTest() {
  try {
    console.log('1Ô∏è‚É£ Importando m√≥dulos...');
    
    // Importar solo el orquestador
    const { Orchestrator } = await import('./src/orchestrator/index');
    console.log('   ‚úÖ Orquestador importado');

    console.log('\n2Ô∏è‚É£ Creando instancia del orquestador...');
    const orchestrator = await Orchestrator.create();
    console.log('   ‚úÖ Orquestador creado exitosamente');

    console.log('\n3Ô∏è‚É£ Probando scraping b√°sico...');
    const testUrl = 'https://www.farfetch.com/shopping/men/shoes-2/items.aspx';
    
    console.log(`   üéØ URL de prueba: ${testUrl}`);
    console.log('   ‚è±Ô∏è  Iniciando scraping...');
    
    const startTime = Date.now();
    
    const results = await orchestrator.scrapeWithSession({
      scrapeUrl: testUrl,
      maxRetries: 1
    });
    
    const endTime = Date.now();
    const duration = (endTime - startTime) / 1000;
    
    console.log(`   ‚è±Ô∏è  Tiempo total: ${duration}s`);
    console.log(`   üìä Resultados: ${results.length} ofertas encontradas`);

    if (results.length > 0) {
      console.log('\n4Ô∏è‚É£ Muestra de datos extra√≠dos:');
      const offer = results[0];
      console.log(`   - ID: ${offer.id}`);
      console.log(`   - T√≠tulo: ${offer.title}`);
      console.log(`   - Precio: $${offer.price}`);
      console.log(`   - Marca: ${offer.brand}`);
      console.log(`   - Estado: ${offer.availability}`);
    }

    console.log('\nüéâ TEST COMPLETADO EXITOSAMENTE');
    console.log(`   ‚úÖ Orquestador funcionando`);
    console.log(`   ‚úÖ ${results.length} ofertas extra√≠das`);
    console.log(`   ‚è±Ô∏è  Tiempo: ${duration}s`);

  } catch (error) {
    console.error('\n‚ùå ERROR EN EL TEST:', error.message);
    console.error('Stack:', error.stack);
  }
}

simpleTest().catch(console.error);
